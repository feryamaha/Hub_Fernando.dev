{"ast":null,"code":"\"use client\";import{forwardRef,useCallback,useEffect,useImperativeHandle,useMemo,useState}from\"react\";import{motion,AnimatePresence}from\"framer-motion\";import\"./RotatingText.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function cn(){for(var _len=arguments.length,classes=new Array(_len),_key=0;_key<_len;_key++){classes[_key]=arguments[_key];}return classes.filter(Boolean).join(\" \");}const RotatingText=/*#__PURE__*/forwardRef((props,ref)=>{const{texts,transition={type:\"spring\",damping:25,stiffness:300},initial={y:\"100%\",opacity:0},animate={y:0,opacity:1},exit={y:\"-120%\",opacity:0},animatePresenceMode=\"wait\",animatePresenceInitial=false,rotationInterval=2000,staggerDuration=0,staggerFrom=\"first\",loop=true,auto=true,splitBy=\"characters\",onNext,mainClassName,splitLevelClassName,elementLevelClassName,...rest}=props;const[currentTextIndex,setCurrentTextIndex]=useState(0);const splitIntoCharacters=text=>{if(typeof Intl!==\"undefined\"&&Intl.Segmenter){const segmenter=new Intl.Segmenter(\"en\",{granularity:\"grapheme\"});return Array.from(segmenter.segment(text),segment=>segment.segment);}return Array.from(text);};const elements=useMemo(()=>{const currentText=texts[currentTextIndex];if(splitBy===\"characters\"){const words=currentText.split(\" \");return words.map((word,i)=>({characters:splitIntoCharacters(word),needsSpace:i!==words.length-1}));}if(splitBy===\"words\"){return currentText.split(\" \").map((word,i,arr)=>({characters:[word],needsSpace:i!==arr.length-1}));}if(splitBy===\"lines\"){return currentText.split(\"\\n\").map((line,i,arr)=>({characters:[line],needsSpace:i!==arr.length-1}));}return currentText.split(splitBy).map((part,i,arr)=>({characters:[part],needsSpace:i!==arr.length-1}));},[texts,currentTextIndex,splitBy]);const getStaggerDelay=useCallback((index,totalChars)=>{const total=totalChars;if(staggerFrom===\"first\")return index*staggerDuration;if(staggerFrom===\"last\")return(total-1-index)*staggerDuration;if(staggerFrom===\"center\"){const center=Math.floor(total/2);return Math.abs(center-index)*staggerDuration;}if(staggerFrom===\"random\"){const randomIndex=Math.floor(Math.random()*total);return Math.abs(randomIndex-index)*staggerDuration;}return Math.abs(staggerFrom-index)*staggerDuration;},[staggerFrom,staggerDuration]);const handleIndexChange=useCallback(newIndex=>{setCurrentTextIndex(newIndex);if(onNext)onNext(newIndex);},[onNext]);const next=useCallback(()=>{const nextIndex=currentTextIndex===texts.length-1?loop?0:currentTextIndex:currentTextIndex+1;if(nextIndex!==currentTextIndex){handleIndexChange(nextIndex);}},[currentTextIndex,texts.length,loop,handleIndexChange]);const previous=useCallback(()=>{const prevIndex=currentTextIndex===0?loop?texts.length-1:currentTextIndex:currentTextIndex-1;if(prevIndex!==currentTextIndex){handleIndexChange(prevIndex);}},[currentTextIndex,texts.length,loop,handleIndexChange]);const jumpTo=useCallback(index=>{const validIndex=Math.max(0,Math.min(index,texts.length-1));if(validIndex!==currentTextIndex){handleIndexChange(validIndex);}},[texts.length,currentTextIndex,handleIndexChange]);const reset=useCallback(()=>{if(currentTextIndex!==0){handleIndexChange(0);}},[currentTextIndex,handleIndexChange]);useImperativeHandle(ref,()=>({next,previous,jumpTo,reset}),[next,previous,jumpTo,reset]);useEffect(()=>{if(!auto)return;const intervalId=setInterval(next,rotationInterval);return()=>clearInterval(intervalId);},[next,rotationInterval,auto]);return/*#__PURE__*/_jsxs(motion.span,{className:cn(\"text-rotate\",mainClassName),...rest,layout:true,transition:transition,children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-rotate-sr-only\",children:texts[currentTextIndex]}),/*#__PURE__*/_jsx(AnimatePresence,{mode:animatePresenceMode,initial:animatePresenceInitial,children:/*#__PURE__*/_jsx(motion.div,{className:cn(splitBy===\"lines\"?\"text-rotate-lines\":\"text-rotate\"),layout:true,\"aria-hidden\":\"true\",children:elements.map((wordObj,wordIndex,array)=>{const previousCharsCount=array.slice(0,wordIndex).reduce((sum,word)=>sum+word.characters.length,0);return/*#__PURE__*/_jsxs(\"span\",{className:cn(\"text-rotate-word\",splitLevelClassName),children:[wordObj.characters.map((char,charIndex)=>/*#__PURE__*/_jsx(motion.span,{initial:initial,animate:animate,exit:exit,transition:{...transition,delay:getStaggerDelay(previousCharsCount+charIndex,array.reduce((sum,word)=>sum+word.characters.length,0))},className:cn(\"text-rotate-element\",elementLevelClassName),children:char},charIndex)),wordObj.needsSpace&&/*#__PURE__*/_jsx(\"span\",{className:\"text-rotate-space\",children:\" \"})]},wordIndex);})},currentTextIndex)})]});});RotatingText.displayName=\"RotatingText\";export default RotatingText;","map":{"version":3,"names":["forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useState","motion","AnimatePresence","jsx","_jsx","jsxs","_jsxs","cn","_len","arguments","length","classes","Array","_key","filter","Boolean","join","RotatingText","props","ref","texts","transition","type","damping","stiffness","initial","y","opacity","animate","exit","animatePresenceMode","animatePresenceInitial","rotationInterval","staggerDuration","staggerFrom","loop","auto","splitBy","onNext","mainClassName","splitLevelClassName","elementLevelClassName","rest","currentTextIndex","setCurrentTextIndex","splitIntoCharacters","text","Intl","Segmenter","segmenter","granularity","from","segment","elements","currentText","words","split","map","word","i","characters","needsSpace","arr","line","part","getStaggerDelay","index","totalChars","total","center","Math","floor","abs","randomIndex","random","handleIndexChange","newIndex","next","nextIndex","previous","prevIndex","jumpTo","validIndex","max","min","reset","intervalId","setInterval","clearInterval","span","className","layout","children","mode","div","wordObj","wordIndex","array","previousCharsCount","slice","reduce","sum","char","charIndex","delay","displayName"],"sources":["/Users/fernandomoreira/Documents/DevProj/Hub_Fernando.dev/src/components/shared/RotatingText.jsx"],"sourcesContent":["\"use client\";\n\nimport {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport \"./RotatingText.css\";\n\nfunction cn(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst RotatingText = forwardRef((props, ref) => {\n  const {\n    texts,\n    transition = { type: \"spring\", damping: 25, stiffness: 300 },\n    initial = { y: \"100%\", opacity: 0 },\n    animate = { y: 0, opacity: 1 },\n    exit = { y: \"-120%\", opacity: 0 },\n    animatePresenceMode = \"wait\",\n    animatePresenceInitial = false,\n    rotationInterval = 2000,\n    staggerDuration = 0,\n    staggerFrom = \"first\",\n    loop = true,\n    auto = true,\n    splitBy = \"characters\",\n    onNext,\n    mainClassName,\n    splitLevelClassName,\n    elementLevelClassName,\n    ...rest\n  } = props;\n\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n\n  const splitIntoCharacters = (text) => {\n    if (typeof Intl !== \"undefined\" && Intl.Segmenter) {\n      const segmenter = new Intl.Segmenter(\"en\", { granularity: \"grapheme\" });\n      return Array.from(segmenter.segment(text), (segment) => segment.segment);\n    }\n    return Array.from(text);\n  };\n\n  const elements = useMemo(() => {\n    const currentText = texts[currentTextIndex];\n    if (splitBy === \"characters\") {\n      const words = currentText.split(\" \");\n      return words.map((word, i) => ({\n        characters: splitIntoCharacters(word),\n        needsSpace: i !== words.length - 1,\n      }));\n    }\n    if (splitBy === \"words\") {\n      return currentText.split(\" \").map((word, i, arr) => ({\n        characters: [word],\n        needsSpace: i !== arr.length - 1,\n      }));\n    }\n    if (splitBy === \"lines\") {\n      return currentText.split(\"\\n\").map((line, i, arr) => ({\n        characters: [line],\n        needsSpace: i !== arr.length - 1,\n      }));\n    }\n    return currentText.split(splitBy).map((part, i, arr) => ({\n      characters: [part],\n      needsSpace: i !== arr.length - 1,\n    }));\n  }, [texts, currentTextIndex, splitBy]);\n\n  const getStaggerDelay = useCallback(\n    (index, totalChars) => {\n      const total = totalChars;\n      if (staggerFrom === \"first\") return index * staggerDuration;\n      if (staggerFrom === \"last\") return (total - 1 - index) * staggerDuration;\n      if (staggerFrom === \"center\") {\n        const center = Math.floor(total / 2);\n        return Math.abs(center - index) * staggerDuration;\n      }\n      if (staggerFrom === \"random\") {\n        const randomIndex = Math.floor(Math.random() * total);\n        return Math.abs(randomIndex - index) * staggerDuration;\n      }\n      return Math.abs(staggerFrom - index) * staggerDuration;\n    },\n    [staggerFrom, staggerDuration]\n  );\n\n  const handleIndexChange = useCallback(\n    (newIndex) => {\n      setCurrentTextIndex(newIndex);\n      if (onNext) onNext(newIndex);\n    },\n    [onNext]\n  );\n\n  const next = useCallback(() => {\n    const nextIndex =\n      currentTextIndex === texts.length - 1\n        ? loop\n          ? 0\n          : currentTextIndex\n        : currentTextIndex + 1;\n    if (nextIndex !== currentTextIndex) {\n      handleIndexChange(nextIndex);\n    }\n  }, [currentTextIndex, texts.length, loop, handleIndexChange]);\n\n  const previous = useCallback(() => {\n    const prevIndex =\n      currentTextIndex === 0\n        ? loop\n          ? texts.length - 1\n          : currentTextIndex\n        : currentTextIndex - 1;\n    if (prevIndex !== currentTextIndex) {\n      handleIndexChange(prevIndex);\n    }\n  }, [currentTextIndex, texts.length, loop, handleIndexChange]);\n\n  const jumpTo = useCallback(\n    (index) => {\n      const validIndex = Math.max(0, Math.min(index, texts.length - 1));\n      if (validIndex !== currentTextIndex) {\n        handleIndexChange(validIndex);\n      }\n    },\n    [texts.length, currentTextIndex, handleIndexChange]\n  );\n\n  const reset = useCallback(() => {\n    if (currentTextIndex !== 0) {\n      handleIndexChange(0);\n    }\n  }, [currentTextIndex, handleIndexChange]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      next,\n      previous,\n      jumpTo,\n      reset,\n    }),\n    [next, previous, jumpTo, reset]\n  );\n\n  useEffect(() => {\n    if (!auto) return;\n    const intervalId = setInterval(next, rotationInterval);\n    return () => clearInterval(intervalId);\n  }, [next, rotationInterval, auto]);\n\n  return (\n    <motion.span\n      className={cn(\"text-rotate\", mainClassName)}\n      {...rest}\n      layout\n      transition={transition}\n    >\n      <span className=\"text-rotate-sr-only\">{texts[currentTextIndex]}</span>\n      <AnimatePresence mode={animatePresenceMode} initial={animatePresenceInitial}>\n        <motion.div\n          key={currentTextIndex}\n          className={cn(\n            splitBy === \"lines\" ? \"text-rotate-lines\" : \"text-rotate\"\n          )}\n          layout\n          aria-hidden=\"true\"\n        >\n          {elements.map((wordObj, wordIndex, array) => {\n            const previousCharsCount = array\n              .slice(0, wordIndex)\n              .reduce((sum, word) => sum + word.characters.length, 0);\n            return (\n              <span\n                key={wordIndex}\n                className={cn(\"text-rotate-word\", splitLevelClassName)}\n              >\n                {wordObj.characters.map((char, charIndex) => (\n                  <motion.span\n                    key={charIndex}\n                    initial={initial}\n                    animate={animate}\n                    exit={exit}\n                    transition={{\n                      ...transition,\n                      delay: getStaggerDelay(\n                        previousCharsCount + charIndex,\n                        array.reduce(\n                          (sum, word) => sum + word.characters.length,\n                          0\n                        )\n                      ),\n                    }}\n                    className={cn(\"text-rotate-element\", elementLevelClassName)}\n                  >\n                    {char}\n                  </motion.span>\n                ))}\n                {wordObj.needsSpace && (\n                  <span className=\"text-rotate-space\"> </span>\n                )}\n              </span>\n            );\n          })}\n        </motion.div>\n      </AnimatePresence>\n    </motion.span>\n  );\n});\n\nRotatingText.displayName = \"RotatingText\";\nexport default RotatingText; "],"mappings":"AAAA,YAAY,CAEZ,OACEA,UAAU,CACVC,WAAW,CACXC,SAAS,CACTC,mBAAmB,CACnBC,OAAO,CACPC,QAAQ,KACH,OAAO,CACd,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CAEvD,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,QAAS,CAAAC,EAAEA,CAAA,CAAa,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAATC,OAAO,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAPF,OAAO,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GACpB,MAAO,CAAAF,OAAO,CAACG,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAC1C,CAEA,KAAM,CAAAC,YAAY,cAAGtB,UAAU,CAAC,CAACuB,KAAK,CAAEC,GAAG,GAAK,CAC9C,KAAM,CACJC,KAAK,CACLC,UAAU,CAAG,CAAEC,IAAI,CAAE,QAAQ,CAAEC,OAAO,CAAE,EAAE,CAAEC,SAAS,CAAE,GAAI,CAAC,CAC5DC,OAAO,CAAG,CAAEC,CAAC,CAAE,MAAM,CAAEC,OAAO,CAAE,CAAE,CAAC,CACnCC,OAAO,CAAG,CAAEF,CAAC,CAAE,CAAC,CAAEC,OAAO,CAAE,CAAE,CAAC,CAC9BE,IAAI,CAAG,CAAEH,CAAC,CAAE,OAAO,CAAEC,OAAO,CAAE,CAAE,CAAC,CACjCG,mBAAmB,CAAG,MAAM,CAC5BC,sBAAsB,CAAG,KAAK,CAC9BC,gBAAgB,CAAG,IAAI,CACvBC,eAAe,CAAG,CAAC,CACnBC,WAAW,CAAG,OAAO,CACrBC,IAAI,CAAG,IAAI,CACXC,IAAI,CAAG,IAAI,CACXC,OAAO,CAAG,YAAY,CACtBC,MAAM,CACNC,aAAa,CACbC,mBAAmB,CACnBC,qBAAqB,CACrB,GAAGC,IACL,CAAC,CAAGxB,KAAK,CAET,KAAM,CAACyB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5C,QAAQ,CAAC,CAAC,CAAC,CAE3D,KAAM,CAAA6C,mBAAmB,CAAIC,IAAI,EAAK,CACpC,GAAI,MAAO,CAAAC,IAAI,GAAK,WAAW,EAAIA,IAAI,CAACC,SAAS,CAAE,CACjD,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAF,IAAI,CAACC,SAAS,CAAC,IAAI,CAAE,CAAEE,WAAW,CAAE,UAAW,CAAC,CAAC,CACvE,MAAO,CAAAtC,KAAK,CAACuC,IAAI,CAACF,SAAS,CAACG,OAAO,CAACN,IAAI,CAAC,CAAGM,OAAO,EAAKA,OAAO,CAACA,OAAO,CAAC,CAC1E,CACA,MAAO,CAAAxC,KAAK,CAACuC,IAAI,CAACL,IAAI,CAAC,CACzB,CAAC,CAED,KAAM,CAAAO,QAAQ,CAAGtD,OAAO,CAAC,IAAM,CAC7B,KAAM,CAAAuD,WAAW,CAAGlC,KAAK,CAACuB,gBAAgB,CAAC,CAC3C,GAAIN,OAAO,GAAK,YAAY,CAAE,CAC5B,KAAM,CAAAkB,KAAK,CAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC,CACpC,MAAO,CAAAD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAM,CAC7BC,UAAU,CAAEf,mBAAmB,CAACa,IAAI,CAAC,CACrCG,UAAU,CAAEF,CAAC,GAAKJ,KAAK,CAAC7C,MAAM,CAAG,CACnC,CAAC,CAAC,CAAC,CACL,CACA,GAAI2B,OAAO,GAAK,OAAO,CAAE,CACvB,MAAO,CAAAiB,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,CAAEG,GAAG,IAAM,CACnDF,UAAU,CAAE,CAACF,IAAI,CAAC,CAClBG,UAAU,CAAEF,CAAC,GAAKG,GAAG,CAACpD,MAAM,CAAG,CACjC,CAAC,CAAC,CAAC,CACL,CACA,GAAI2B,OAAO,GAAK,OAAO,CAAE,CACvB,MAAO,CAAAiB,WAAW,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACM,IAAI,CAAEJ,CAAC,CAAEG,GAAG,IAAM,CACpDF,UAAU,CAAE,CAACG,IAAI,CAAC,CAClBF,UAAU,CAAEF,CAAC,GAAKG,GAAG,CAACpD,MAAM,CAAG,CACjC,CAAC,CAAC,CAAC,CACL,CACA,MAAO,CAAA4C,WAAW,CAACE,KAAK,CAACnB,OAAO,CAAC,CAACoB,GAAG,CAAC,CAACO,IAAI,CAAEL,CAAC,CAAEG,GAAG,IAAM,CACvDF,UAAU,CAAE,CAACI,IAAI,CAAC,CAClBH,UAAU,CAAEF,CAAC,GAAKG,GAAG,CAACpD,MAAM,CAAG,CACjC,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,CAACU,KAAK,CAAEuB,gBAAgB,CAAEN,OAAO,CAAC,CAAC,CAEtC,KAAM,CAAA4B,eAAe,CAAGrE,WAAW,CACjC,CAACsE,KAAK,CAAEC,UAAU,GAAK,CACrB,KAAM,CAAAC,KAAK,CAAGD,UAAU,CACxB,GAAIjC,WAAW,GAAK,OAAO,CAAE,MAAO,CAAAgC,KAAK,CAAGjC,eAAe,CAC3D,GAAIC,WAAW,GAAK,MAAM,CAAE,MAAO,CAACkC,KAAK,CAAG,CAAC,CAAGF,KAAK,EAAIjC,eAAe,CACxE,GAAIC,WAAW,GAAK,QAAQ,CAAE,CAC5B,KAAM,CAAAmC,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAG,CAAC,CAAC,CACpC,MAAO,CAAAE,IAAI,CAACE,GAAG,CAACH,MAAM,CAAGH,KAAK,CAAC,CAAGjC,eAAe,CACnD,CACA,GAAIC,WAAW,GAAK,QAAQ,CAAE,CAC5B,KAAM,CAAAuC,WAAW,CAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACI,MAAM,CAAC,CAAC,CAAGN,KAAK,CAAC,CACrD,MAAO,CAAAE,IAAI,CAACE,GAAG,CAACC,WAAW,CAAGP,KAAK,CAAC,CAAGjC,eAAe,CACxD,CACA,MAAO,CAAAqC,IAAI,CAACE,GAAG,CAACtC,WAAW,CAAGgC,KAAK,CAAC,CAAGjC,eAAe,CACxD,CAAC,CACD,CAACC,WAAW,CAAED,eAAe,CAC/B,CAAC,CAED,KAAM,CAAA0C,iBAAiB,CAAG/E,WAAW,CAClCgF,QAAQ,EAAK,CACZhC,mBAAmB,CAACgC,QAAQ,CAAC,CAC7B,GAAItC,MAAM,CAAEA,MAAM,CAACsC,QAAQ,CAAC,CAC9B,CAAC,CACD,CAACtC,MAAM,CACT,CAAC,CAED,KAAM,CAAAuC,IAAI,CAAGjF,WAAW,CAAC,IAAM,CAC7B,KAAM,CAAAkF,SAAS,CACbnC,gBAAgB,GAAKvB,KAAK,CAACV,MAAM,CAAG,CAAC,CACjCyB,IAAI,CACF,CAAC,CACDQ,gBAAgB,CAClBA,gBAAgB,CAAG,CAAC,CAC1B,GAAImC,SAAS,GAAKnC,gBAAgB,CAAE,CAClCgC,iBAAiB,CAACG,SAAS,CAAC,CAC9B,CACF,CAAC,CAAE,CAACnC,gBAAgB,CAAEvB,KAAK,CAACV,MAAM,CAAEyB,IAAI,CAAEwC,iBAAiB,CAAC,CAAC,CAE7D,KAAM,CAAAI,QAAQ,CAAGnF,WAAW,CAAC,IAAM,CACjC,KAAM,CAAAoF,SAAS,CACbrC,gBAAgB,GAAK,CAAC,CAClBR,IAAI,CACFf,KAAK,CAACV,MAAM,CAAG,CAAC,CAChBiC,gBAAgB,CAClBA,gBAAgB,CAAG,CAAC,CAC1B,GAAIqC,SAAS,GAAKrC,gBAAgB,CAAE,CAClCgC,iBAAiB,CAACK,SAAS,CAAC,CAC9B,CACF,CAAC,CAAE,CAACrC,gBAAgB,CAAEvB,KAAK,CAACV,MAAM,CAAEyB,IAAI,CAAEwC,iBAAiB,CAAC,CAAC,CAE7D,KAAM,CAAAM,MAAM,CAAGrF,WAAW,CACvBsE,KAAK,EAAK,CACT,KAAM,CAAAgB,UAAU,CAAGZ,IAAI,CAACa,GAAG,CAAC,CAAC,CAAEb,IAAI,CAACc,GAAG,CAAClB,KAAK,CAAE9C,KAAK,CAACV,MAAM,CAAG,CAAC,CAAC,CAAC,CACjE,GAAIwE,UAAU,GAAKvC,gBAAgB,CAAE,CACnCgC,iBAAiB,CAACO,UAAU,CAAC,CAC/B,CACF,CAAC,CACD,CAAC9D,KAAK,CAACV,MAAM,CAAEiC,gBAAgB,CAAEgC,iBAAiB,CACpD,CAAC,CAED,KAAM,CAAAU,KAAK,CAAGzF,WAAW,CAAC,IAAM,CAC9B,GAAI+C,gBAAgB,GAAK,CAAC,CAAE,CAC1BgC,iBAAiB,CAAC,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAAChC,gBAAgB,CAAEgC,iBAAiB,CAAC,CAAC,CAEzC7E,mBAAmB,CACjBqB,GAAG,CACH,KAAO,CACL0D,IAAI,CACJE,QAAQ,CACRE,MAAM,CACNI,KACF,CAAC,CAAC,CACF,CAACR,IAAI,CAAEE,QAAQ,CAAEE,MAAM,CAAEI,KAAK,CAChC,CAAC,CAEDxF,SAAS,CAAC,IAAM,CACd,GAAI,CAACuC,IAAI,CAAE,OACX,KAAM,CAAAkD,UAAU,CAAGC,WAAW,CAACV,IAAI,CAAE7C,gBAAgB,CAAC,CACtD,MAAO,IAAMwD,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,CAACT,IAAI,CAAE7C,gBAAgB,CAAEI,IAAI,CAAC,CAAC,CAElC,mBACE9B,KAAA,CAACL,MAAM,CAACwF,IAAI,EACVC,SAAS,CAAEnF,EAAE,CAAC,aAAa,CAAEgC,aAAa,CAAE,IACxCG,IAAI,CACRiD,MAAM,MACNtE,UAAU,CAAEA,UAAW,CAAAuE,QAAA,eAEvBxF,IAAA,SAAMsF,SAAS,CAAC,qBAAqB,CAAAE,QAAA,CAAExE,KAAK,CAACuB,gBAAgB,CAAC,CAAO,CAAC,cACtEvC,IAAA,CAACF,eAAe,EAAC2F,IAAI,CAAE/D,mBAAoB,CAACL,OAAO,CAAEM,sBAAuB,CAAA6D,QAAA,cAC1ExF,IAAA,CAACH,MAAM,CAAC6F,GAAG,EAETJ,SAAS,CAAEnF,EAAE,CACX8B,OAAO,GAAK,OAAO,CAAG,mBAAmB,CAAG,aAC9C,CAAE,CACFsD,MAAM,MACN,cAAY,MAAM,CAAAC,QAAA,CAEjBvC,QAAQ,CAACI,GAAG,CAAC,CAACsC,OAAO,CAAEC,SAAS,CAAEC,KAAK,GAAK,CAC3C,KAAM,CAAAC,kBAAkB,CAAGD,KAAK,CAC7BE,KAAK,CAAC,CAAC,CAAEH,SAAS,CAAC,CACnBI,MAAM,CAAC,CAACC,GAAG,CAAE3C,IAAI,GAAK2C,GAAG,CAAG3C,IAAI,CAACE,UAAU,CAAClD,MAAM,CAAE,CAAC,CAAC,CACzD,mBACEJ,KAAA,SAEEoF,SAAS,CAAEnF,EAAE,CAAC,kBAAkB,CAAEiC,mBAAmB,CAAE,CAAAoD,QAAA,EAEtDG,OAAO,CAACnC,UAAU,CAACH,GAAG,CAAC,CAAC6C,IAAI,CAAEC,SAAS,gBACtCnG,IAAA,CAACH,MAAM,CAACwF,IAAI,EAEVhE,OAAO,CAAEA,OAAQ,CACjBG,OAAO,CAAEA,OAAQ,CACjBC,IAAI,CAAEA,IAAK,CACXR,UAAU,CAAE,CACV,GAAGA,UAAU,CACbmF,KAAK,CAAEvC,eAAe,CACpBiC,kBAAkB,CAAGK,SAAS,CAC9BN,KAAK,CAACG,MAAM,CACV,CAACC,GAAG,CAAE3C,IAAI,GAAK2C,GAAG,CAAG3C,IAAI,CAACE,UAAU,CAAClD,MAAM,CAC3C,CACF,CACF,CACF,CAAE,CACFgF,SAAS,CAAEnF,EAAE,CAAC,qBAAqB,CAAEkC,qBAAqB,CAAE,CAAAmD,QAAA,CAE3DU,IAAI,EAhBAC,SAiBM,CACd,CAAC,CACDR,OAAO,CAAClC,UAAU,eACjBzD,IAAA,SAAMsF,SAAS,CAAC,mBAAmB,CAAAE,QAAA,CAAC,GAAC,CAAM,CAC5C,GA1BII,SA2BD,CAAC,CAEX,CAAC,CAAC,EA1CGrD,gBA2CK,CAAC,CACE,CAAC,EACP,CAAC,CAElB,CAAC,CAAC,CAEF1B,YAAY,CAACwF,WAAW,CAAG,cAAc,CACzC,cAAe,CAAAxF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}