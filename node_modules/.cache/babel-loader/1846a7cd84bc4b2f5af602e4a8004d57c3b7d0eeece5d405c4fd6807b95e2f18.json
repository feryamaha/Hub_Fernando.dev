{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{MagnifyingGlassIcon,XMarkIcon}from'@heroicons/react/24/outline';const Search=_ref=>{let{onSearch}=_ref;const[value,setValue]=useState('');const[isFocused,setIsFocused]=useState(false);const inputRef=useRef(null);useEffect(()=>{const handleKeyDown=e=>{// Command/Control + F to focus search\nif((e.metaKey||e.ctrlKey)&&e.key==='f'){var _inputRef$current;e.preventDefault();(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}// Escape to clear search\nif(e.key==='Escape'&&document.activeElement===inputRef.current){var _inputRef$current2;setValue('');onSearch('');(_inputRef$current2=inputRef.current)===null||_inputRef$current2===void 0?void 0:_inputRef$current2.blur();}};window.addEventListener('keydown',handleKeyDown);return()=>window.removeEventListener('keydown',handleKeyDown);},[onSearch]);const handleChange=e=>{setValue(e.target.value);onSearch(e.target.value);};const handleClear=()=>{var _inputRef$current3;setValue('');onSearch('');(_inputRef$current3=inputRef.current)===null||_inputRef$current3===void 0?void 0:_inputRef$current3.focus();};/*   return (\n    <div className=\"relative w-full max-w-md\">\n      <div\n        className={`\n          relative flex items-center w-full h-9 px-3\n          bg-white/90 dark:bg-gray-800/90\n          border border-gray-200 dark:border-gray-700\n          rounded-md shadow-sm\n          transition-all duration-200\n          ${isFocused ? 'ring-2 ring-blue-500 border-transparent' : ''}\n        `}\n      >\n        <MagnifyingGlassIcon className=\"w-4 h-4 text-gray-400\" />\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          placeholder=\"Search files and folders...\"\n          className=\"\n            w-full ml-2 bg-transparent\n            text-sm text-gray-900 dark:text-gray-100\n            placeholder-gray-400 dark:placeholder-gray-500\n            focus:outline-none\n          \"\n        />\n\n        {value && (\n          <button\n            onClick={handleClear}\n            className=\"\n              p-0.5 rounded-full\n              hover:bg-gray-100 dark:hover:bg-gray-700\n              transition-colors duration-200\n            \"\n          >\n            <XMarkIcon className=\"w-4 h-4 text-gray-400\" />\n          </button>\n        )}\n      </div>\n\n      <div className=\"absolute mt-1 text-xs text-gray-400 dark:text-gray-500 left-0\">\n        Press ⌘F to search\n      </div>\n    </div>\n  ); */};export default Search;","map":{"version":3,"names":["React","useState","useEffect","useRef","MagnifyingGlassIcon","XMarkIcon","Search","_ref","onSearch","value","setValue","isFocused","setIsFocused","inputRef","handleKeyDown","e","metaKey","ctrlKey","key","_inputRef$current","preventDefault","current","focus","document","activeElement","_inputRef$current2","blur","window","addEventListener","removeEventListener","handleChange","target","handleClear","_inputRef$current3"],"sources":["/Users/fernandomoreira/Documents/DevProj/Hub_Fernando.dev/src/components/MainContent/Search/Search.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MagnifyingGlassIcon, XMarkIcon } from '@heroicons/react/24/outline';\n\nconst Search = ({ onSearch }) => {\n  const [value, setValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      // Command/Control + F to focus search\n      if ((e.metaKey || e.ctrlKey) && e.key === 'f') {\n        e.preventDefault();\n        inputRef.current?.focus();\n      }\n      // Escape to clear search\n      if (e.key === 'Escape' && document.activeElement === inputRef.current) {\n        setValue('');\n        onSearch('');\n        inputRef.current?.blur();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onSearch]);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    onSearch(e.target.value);\n  };\n\n  const handleClear = () => {\n    setValue('');\n    onSearch('');\n    inputRef.current?.focus();\n  };\n\n/*   return (\n    <div className=\"relative w-full max-w-md\">\n      <div\n        className={`\n          relative flex items-center w-full h-9 px-3\n          bg-white/90 dark:bg-gray-800/90\n          border border-gray-200 dark:border-gray-700\n          rounded-md shadow-sm\n          transition-all duration-200\n          ${isFocused ? 'ring-2 ring-blue-500 border-transparent' : ''}\n        `}\n      >\n        <MagnifyingGlassIcon className=\"w-4 h-4 text-gray-400\" />\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          placeholder=\"Search files and folders...\"\n          className=\"\n            w-full ml-2 bg-transparent\n            text-sm text-gray-900 dark:text-gray-100\n            placeholder-gray-400 dark:placeholder-gray-500\n            focus:outline-none\n          \"\n        />\n\n        {value && (\n          <button\n            onClick={handleClear}\n            className=\"\n              p-0.5 rounded-full\n              hover:bg-gray-100 dark:hover:bg-gray-700\n              transition-colors duration-200\n            \"\n          >\n            <XMarkIcon className=\"w-4 h-4 text-gray-400\" />\n          </button>\n        )}\n      </div>\n\n      <div className=\"absolute mt-1 text-xs text-gray-400 dark:text-gray-500 left-0\">\n        Press ⌘F to search\n      </div>\n    </div>\n  ); */\n};\n\nexport default Search; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,mBAAmB,CAAEC,SAAS,KAAQ,6BAA6B,CAE5E,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAY,QAAQ,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,aAAa,CAAIC,CAAC,EAAK,CAC3B;AACA,GAAI,CAACA,CAAC,CAACC,OAAO,EAAID,CAAC,CAACE,OAAO,GAAKF,CAAC,CAACG,GAAG,GAAK,GAAG,CAAE,KAAAC,iBAAA,CAC7CJ,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,CAAAD,iBAAA,CAAAN,QAAQ,CAACQ,OAAO,UAAAF,iBAAA,iBAAhBA,iBAAA,CAAkBG,KAAK,CAAC,CAAC,CAC3B,CACA;AACA,GAAIP,CAAC,CAACG,GAAG,GAAK,QAAQ,EAAIK,QAAQ,CAACC,aAAa,GAAKX,QAAQ,CAACQ,OAAO,CAAE,KAAAI,kBAAA,CACrEf,QAAQ,CAAC,EAAE,CAAC,CACZF,QAAQ,CAAC,EAAE,CAAC,CACZ,CAAAiB,kBAAA,CAAAZ,QAAQ,CAACQ,OAAO,UAAAI,kBAAA,iBAAhBA,kBAAA,CAAkBC,IAAI,CAAC,CAAC,CAC1B,CACF,CAAC,CAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAEd,aAAa,CAAC,CACjD,MAAO,IAAMa,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAEf,aAAa,CAAC,CACnE,CAAC,CAAE,CAACN,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAsB,YAAY,CAAIf,CAAC,EAAK,CAC1BL,QAAQ,CAACK,CAAC,CAACgB,MAAM,CAACtB,KAAK,CAAC,CACxBD,QAAQ,CAACO,CAAC,CAACgB,MAAM,CAACtB,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAuB,WAAW,CAAGA,CAAA,GAAM,KAAAC,kBAAA,CACxBvB,QAAQ,CAAC,EAAE,CAAC,CACZF,QAAQ,CAAC,EAAE,CAAC,CACZ,CAAAyB,kBAAA,CAAApB,QAAQ,CAACQ,OAAO,UAAAY,kBAAA,iBAAhBA,kBAAA,CAAkBX,KAAK,CAAC,CAAC,CAC3B,CAAC,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACA,CAAC,CAED,cAAe,CAAAhB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}