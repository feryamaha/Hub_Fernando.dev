import { useState, useEffect } from 'react';

const THEME_COLORS = {
  red: '#FF5F57',
  orange: '#FEBC2E',
  yellow: '#FFE08C',
  green: '#28C840',
  blue: '#0A84FF',
  purple: '#BF5AF2',
  gray: '#98989D'
};

export const useTheme = (initialTheme = 'blue') => {
  const [theme, setTheme] = useState(() => {
    const savedTheme = localStorage.getItem('theme');
    return savedTheme || initialTheme;
  });

  useEffect(() => {
    // Remove todas as classes de tema possíveis
    Object.keys(THEME_COLORS).forEach(color => {
      document.documentElement.classList.remove(`theme-${color}`);
    });

    // Adiciona a nova classe de tema
    document.documentElement.classList.add(`theme-${theme}`);

    // Atualiza a variável CSS personalizada
    document.documentElement.style.setProperty('--finder-accent', THEME_COLORS[theme]);

    // Salva no localStorage
    localStorage.setItem('theme', theme);
  }, [theme]);

  return [theme, setTheme];
};

export const THEME_LIST = Object.entries(THEME_COLORS).map(([color, hex]) => ({
  id: `theme-${color}`,
  name: `${color.charAt(0).toUpperCase() + color.slice(1)} Theme`,
  color,
  className: `theme-${color}`,
  hex
})); 